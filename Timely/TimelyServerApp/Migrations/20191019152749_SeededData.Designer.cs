// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimelyServerApp;

namespace TimelyServerApp.Migrations
{
    [DbContext(typeof(TimelyDBContext))]
    [Migration("20191019152749_SeededData")]
    partial class SeededData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimelyServerApp.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Project name 1",
                            Note = "This is the first project"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Project name 2",
                            Note = "Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Project name 3",
                            Note = "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Project name 4",
                            Note = "sometimes by accident, sometimes on purpose (injected humour and the like)"
                        });
                });

            modelBuilder.Entity("TimelyServerApp.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "design"
                        });
                });

            modelBuilder.Entity("TimelyServerApp.Entities.WorkSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkSessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is seeded work session",
                            ProjectId = 1,
                            StartDate = new DateTime(2019, 10, 19, 17, 27, 48, 856, DateTimeKind.Local).AddTicks(7240)
                        });
                });

            modelBuilder.Entity("TimelyServerApp.Entities.WorkSessionTag", b =>
                {
                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("WorkSessionId")
                        .HasColumnType("int");

                    b.HasKey("TagId", "WorkSessionId");

                    b.ToTable("WorkSessionTag");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            WorkSessionId = 1
                        });
                });

            modelBuilder.Entity("TimelyServerApp.Entities.WorkSession", b =>
                {
                    b.HasOne("TimelyServerApp.Entities.Project", "Project")
                        .WithMany("WorkSessions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimelyServerApp.Entities.WorkSessionTag", b =>
                {
                    b.HasOne("TimelyServerApp.Entities.Tag", "Tag")
                        .WithMany("WorkSessionTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimelyServerApp.Entities.WorkSession", "WorkSession")
                        .WithMany("WorkSessionTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
